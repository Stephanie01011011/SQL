#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 


/*How many orders were placed in January?*/
SELECT COUNT(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6;

/*How many of those orders were for an iPhone?*/
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND Product = 'iPhone';

/*Select the customer account numbers for all the orders that were placed in February.*/
SELECT distinct acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON BIT_DB.customers.order_id = BIT_DB.FebSales.orderID
WHERE length(orderID) = 6
LIMIT 10;

/*Which product was the cheapest one sold in January, and what was the price?*/
SELECT Product, MIN(price)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
GROUP BY Product, price
ORDER BY price
LIMIT 1;

/*What is the total revenue for each product sold in January?*/
SELECT product,SUM(Quantity) * price as revenue
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
GROUP BY product;

/*Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?*/
SELECT location, Product, sum(Quantity), SUM(Quantity) * price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
AND length(orderID) = 6
GROUP BY product;

/*How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?*/
SELECT COUNT(cus.order_id), AVG(Quantity * price)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cus
ON feb.orderID = cus.order_id
WHERE feb.Quantity > 2
AND length(orderID) = 6;

/* Find order dates between the dates specified (02-13 & 02-18) */
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

/* Find locations where order date is a specific date (02-18-19) at a certain time (01:35) */
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

/* Find the total amount of items sold at a certain date (02-18-19) but at any time that day*/
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

/* Find all the products sold in Los Angeles in February, and include how many of each were sold */
SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

/* Find which locations in New York received at least 3 orders in January, and how many orders they each received*/
SELECT distinct location, COUNT(orderID)
FROM BIT_DB.JanSales
Group By location
HAVING location like '%NY%' AND SUM(Quantity) > 2 AND length(orderid) = 6;

/* Find how many of each type of headphone were sold in February*/
SELECT distinct Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product like '%headphone%'
GROUP BY Product;

/*Find the average amount spent per account in February*/
SELECT AVG(Quantity*price)
FROM BIT_DB.FebSales
WHERE length(orderID) = 6 ;

/* Find the average quantity of products purchased per account in February*/
SELECT SUM(Quantity)/COUNT(c.acctnum)
FROM BIT_DB.FebSales f
LEFT JOIN BIT_DB.customers c
ON f.orderID = c.order_id
WHERE length(orderID) = 6;

/* Find which product brought in the most revenue in January and how much revenue did it bring in total*/
SELECT Product, SUM(quantity*price) as revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY revenue desc
LIMIT 1;
